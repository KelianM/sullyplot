% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auto_plot.R
\name{auto_plot}
\alias{auto_plot}
\title{Generate code and a `ggplot` object according to the described plot.}
\usage{
auto_plot(
  data,
  plot_columns,
  plot_description,
  num_code_attempts = 5,
  code_model = "gpt-4",
  save_messages = FALSE,
  save_dir = "",
  save_name = "auto_plot"
)
}
\arguments{
\item{data}{The input data to plot, can be either the path to a file (must be .csv or .xlsx) or a data frame.}

\item{plot_columns}{The list of names of columns in your dataframe which are relevant to the plot.}

\item{plot_description}{The description of the plot you want.}

\item{num_code_attempts}{The maximum number of attempts to code your plot before failing - can take less if no errors are encountered in code generation. Default is 5.}

\item{code_model}{The name of the language model to use for coding individual plots, in the case of azure openai this is the deployment_id. Default 'gpt-4'.}

\item{save_messages}{Whether to save chat messages for the plotting code generation, useful for finetuning. Default is false.}

\item{save_dir}{The directory to save chat messages in.}

\item{save_name}{The name to save chat messages under. Default is "auto_plot".}
}
\value{
The code string that was run to generate the plot, the corresponding `ggplot` object, and the total tokens used.
}
\description{
This function automatically generates code and a `ggplot` object according to the described plot.
}
\examples{
\dontrun{
# Example usage with saving ggplots to a pdf
my_plot <- auto_plot(iris_df, ["variety", "sepal.length"],
 "A box plot of sepal length for each variety to show the distribution of sepal length within each variety.")
print(my_plot$plot_obj)
}
}
