% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats_helpers.R
\name{get_standardised_names}
\alias{get_standardised_names}
\title{get_standardised_names}
\usage{
get_standardised_names(
  name_vec,
  remove_nas = FALSE,
  resolve_duplicates = FALSE
)
}
\arguments{
\item{name_vec}{- A character vector containing names to be converted.}

\item{remove_nas}{- If TRUE, will remove NA elements from the returned vector.}

\item{resolve_duplicates}{- If TRUE, will replace duplicated names with name, index pairs. E.g. "x", "x" -> "x.1", "x.2"}
}
\value{
- A character vector containing the converted (snake_case) names.
}
\description{
Description converts a vector containing names with camel-case, comma, period and underscore case,  
and converts them to snake_case. You might want to use this function over snakecase::to_snake_case(n) where is large,
or speed is a concern. This function is 10 times faster than snake_case::to_snake_case(n):
      v <- rep("this      is ....%/ a\\tstring", 100000)
      system.time(snakecase::to_snake_case(v))
       user  system elapsed 
        2.685   0.000   2.684 
      system.time(get_standardised_names(v))
         user  system elapsed 
        0.385   0.003   0.389
}
\examples{
\dontrun{
v <- c("ggGG", "GG", "gg", "G_G", "g,g","g.g", "g:g")
get_standardised_names(v)
# [1] "gggg" "gg"   "gg"   "g_g"  "g_g"  "g_g"  "g_g" 
}
}
